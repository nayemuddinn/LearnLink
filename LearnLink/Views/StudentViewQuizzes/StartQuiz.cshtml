@model List<LearnLink.Models.QuizQuestion>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Student LearnLink</title>
    <link href="@Url.Content("/Content/dashboard.css")" rel="stylesheet" />
    <link href="@Url.Content("/Content/mid.css")" rel="stylesheet" />
    <link href="@Url.Content("/Content/backbutton2.css")" rel="stylesheet" />
</head>
<body>
    <div class="responsive-wrapper">
        <div class="app">
            <div class="app-header">
                <div class="logo">
                    <div class="logo-icon">
                        <ion-icon name="school-outline"></ion-icon>
                    </div>
                    <div class="logo-title">
                        <span>LearnLink</span>
                        <span>@HttpContext.Current.Session["UserRole"]</span>
                    </div>
                </div>
                <div class="app-header-navigation">
                   
                </div>

           
                <div class="app-header-actions">
                    <div class="header-timer" id="headerTimer">
                        <ion-icon name="timer-outline"></ion-icon>
                        <span id="quizTimeHeader">--:--</span>
                    </div>
                    <div class="app-header-actions-buttons">
                        <ion-icon size="large" name="person-circle"></ion-icon>
                        <h3>@HttpContext.Current.Session["UserName"]</h3>
                    </div>
                </div>

     
                <div class="app-header-mobile">
                    <div class="header-timer" id="headerTimerMobile" style="margin-bottom:6px;">
                        <ion-icon name="timer-outline"></ion-icon>
                        <span id="quizTimeHeaderMobile">--:--</span>
                    </div>
                    <ion-icon size="large" name="person-circle"></ion-icon>
                    <h3>@HttpContext.Current.Session["UserName"]</h3>
                </div>
            </div>

            <div class="app-body">
                @{
                    if (Session["UserRole"].Equals("Student"))
                    {
                        <div class="app-body-navigation">
                            <nav class="navigation">
                                <a href="@Url.Action("AllCourse", "AllCourse")">
                                    <i class="icon ion-md-book"></i>
                                    <span>All Courses</span>
                                </a>
                                <a href="@Url.Action("ViewEnrolledCourses", "StudentEnrolledCourses")">
                                    <i class="icon ion-md-person-add"></i>
                                    <span>Enrolled Courses</span>
                                </a>
                                <a href="@Url.Action("Assessment", "Assessment")">
                                    <i class="icon ion-md-checkmark-circle"></i>
                                    <span>Assessments</span>
                                </a>
                                <a href="@Url.Action("editStudentProfile", "editStudentProfile")">
                                    <i class="icon ion-md-person"></i>
                                    <span>Edit Profile</span>
                                </a>
                                <a href="@Url.Action("login", "Login")">
                                    <i class="icon ion-md-exit"></i>
                                    <span>Log Out</span>
                                </a>
                            </nav>
                        </div>
                    }
                    else
                    {
                        <div class="app-body-navigation">
                            <nav class="navigation">
                                <a href="@Url.Action("ManageCourse", "ManageCourse")">
                                    <i class="icon ion-md-book"></i>
                                    <span>Manage Courses</span>
                                </a>
                                <a href="@Url.Action("createCourse", "createCourse")">
                                    <i class="icon ion-md-add-circle"></i>
                                    <span>Create Courses</span>
                                </a>
                                <a href="@Url.Action("courseMaterials", "courseMaterials")">
                                    <i class="icon ion-md-add-circle"></i>
                                    <span>CourseMaterials</span>
                                </a>
                                <a href="@Url.Action("enrollStudents", "enrollStudents")">
                                    <i class="icon ion-md-person-add"></i>
                                    <span>Enroll Students</span>
                                </a>
                                <a href="@Url.Action("Assessment", "Assessment")">
                                    <i class="icon ion-md-checkmark-circle"></i>
                                    <span>Assessments</span>
                                </a>
                                <a href="@Url.Action("editteacherProfile", "editteacherProfile")">
                                    <i class="icon ion-md-person"></i>
                                    <span>Edit Profile</span>
                                </a>
                                <a href="@Url.Action("login", "Login")">
                                    <i class="icon ion-md-exit"></i>
                                    <span>Log Out</span>
                                </a>
                            </nav>
                        </div>
                    }
                }

                <script src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.js"></script>

                <div class="mid">
                    <div class="app-body-content">
                        @using (Html.BeginForm("SubmitQuiz", "StudentViewQuizzes", FormMethod.Post))
                        {
                            var questionNumber = 1;

                            <div>
                                @foreach (var question in Model)
                                {
                                    <div class="quiz-question">
                                        <p>@questionNumber : @question.Question</p>
                                        <div>
                                            <div style="display: flex; flex-wrap: wrap;">
                                                <label style="margin-right: 30px;">
                                                    <input type="radio" name="question_@question.QuestionID" value="A" required /> @question.OptionA
                                                </label>
                                                <label style="margin-right: 30px;">
                                                    <input type="radio" name="question_@question.QuestionID" value="B" required /> @question.OptionB
                                                </label>
                                                <label style="margin-right: 30px;">
                                                    <input type="radio" name="question_@question.QuestionID" value="C" required /> @question.OptionC
                                                </label>
                                                <label>
                                                    <input type="radio" name="question_@question.QuestionID" value="D" required /> @question.OptionD
                                                </label>
                                            </div>

                                        </div>
                                        <br />
                                    </div>
                                    <br />
                                    questionNumber++;
                                }
                            </div>

                            <button type="submit" class="btn btn-back">Submit</button>
                        }
                    </div>
                </div>

            </div>
            <br /><br />

            <div class="footer">
                <div>&copy; 2024 LearnLink. All rights reserved.</div>
            </div>
        </div>
    </div>


    <script>
    (function () {
        var endIso = '@(((DateTime)Session["QuizEndtime"]).ToUniversalTime().ToString("o"))';
        var serverNowIso = '@DateTime.UtcNow.ToString("o")';
        if (!endIso || endIso === '') return;

        var end = new Date(endIso).getTime();
        var serverNow = new Date(serverNowIso).getTime();
        var clientNow = Date.now();
        var skew = serverNow - clientNow;

        var timeElHeader = document.getElementById('quizTimeHeader');
        var timeElHeaderMobile = document.getElementById('quizTimeHeaderMobile');
        var headerTimer = document.getElementById('headerTimer');
        var headerTimerMobile = document.getElementById('headerTimerMobile');

        function pad(n){ return n < 10 ? '0' + n : n; }

        function writeTime(el, text) { if (el) el.textContent = text; }
        function setWarn(container, on) { if (!container) return; container.classList.toggle('warn', !!on); }
        function setEnd(container, on) { if (!container) return; container.classList.toggle('end', !!on); }

        function render(ms) {
            var totalSec = Math.floor(ms / 1000);
            var h = Math.floor(totalSec / 3600);
            var m = Math.floor((totalSec % 3600) / 60);
            var s = totalSec % 60;
            var txt = (h > 0 ? pad(h) + ':' : '') + pad(m) + ':' + pad(s);

            writeTime(timeElHeader, txt);
            writeTime(timeElHeaderMobile, txt);

            setWarn(headerTimer, totalSec <= 60 && totalSec > 0);
            setWarn(headerTimerMobile, totalSec <= 60 && totalSec > 0);

            if (totalSec <= 0) {
                setWarn(headerTimer, false);
                setWarn(headerTimerMobile, false);
                setEnd(headerTimer, true);
                setEnd(headerTimerMobile, true);

                var form = document.querySelector('form[action*="SubmitQuiz"]');
                if (form) {
                    var submitBtn = form.querySelector('button[type="submit"], input[type="submit"]');
                    if (submitBtn) submitBtn.disabled = true;
                    form.submit();
                }
            }
        }

        function tick() {
            var now = Date.now() + skew;
            var ms = end - now;
            render(ms);
            if (ms <= 0) clearInterval(iv);
        }

        tick();
        var iv = setInterval(tick, 1000);
    })();
    </script>
</body>
</html>
