@model LearnLink.Models.User

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Student Profile - LearnLink</title>
    <link href="@Url.Content("/Content/editprofile.css")" rel="stylesheet" />
</head>
<body>
    <div class="profile-wrapper student-profile">
        <header class="profile-header">
            <div class="logo">
                <ion-icon name="school-outline"></ion-icon>
                <span>LearnLink</span>
            </div>
         
        </header>

        <main class="profile-content">
            <div class="form-wrapper">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <h2>Edit Student Profile</h2>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group">
                            @Html.LabelFor(m => m.Name, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group">
                                @Html.EditorFor(m => m.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.Email, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group">
                                @Html.EditorFor(m => m.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.Phone, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group">
                                @Html.EditorFor(m => m.Phone, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(m => m.Phone, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.Address, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group">
                                @Html.EditorFor(m => m.Address, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(m => m.Address, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.Institution, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group">
                                @Html.EditorFor(m => m.Institution, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(m => m.Institution, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="input-group">
                                <input type="submit" value="Save" class="btn btn-primary" />
                            </div>
                        </div>
                    </div>
                }
            </div>
        </main>

        <footer class="profile-footer">
            <div>
                LearnLink &copy; 2024. All rights reserved.
            </div>
        </footer>
    </div>
</body>
</html>
